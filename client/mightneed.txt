{/* <div>
<Container style={{marginTop:"75px"}}>
      <Row className="justify-content-md-center">
    <Col xs lg="7">
      <h3>$10.00</h3>
      <Nav.Link href="/checkout"><button>Checkout</button></Nav.Link> */}
      {/* {showItem&& <ShippingForm name={name} setName={setName} address={address} handleAddressForm={handleAddressForm}/>} */}
       {/* </Col>
       </Row>

       </Container>
  </div> */}

  charges controller


  #   session=Stripe::Checkout::Session.create({
  #     line_items:[{
  #       price: params[:price],
  #       quantity:params[:quantity],

  #     }],
  #     mode: "payment",
  #     success_url:'http://localhost:4000'+'?success=true',
  #     cancel_url:'http://localhost:4000'+"?canceled=true",
  #   })
  #   redirect session.url, 303
  # end
end
# '''
# This method doesnot work anymore try different way
#   def create

#     Stripe.api_key ='sk_test_51KHMZ6LX7eA72NUeag5u1hQJjM2mA4mZzEBxgIuKwpNPkk9ekkolUBze9nUhVqAM0E5WpBUeZaVAacZeT9orYvKj00wXc4izAv'
#     ip_key = SecureRandom.uuid
  
#       begin
#         currentUser=User.find_by(id:session[:user_id])
#         customer = Stripe::Customer.create(
#         :email => current_user.email,
#         :source=>params[:charge][:token]
#         # :payment_method => params[:id]
#         )
  
#         puts customer
  
#         charge = Stripe::Charge.create({
#         :customer => customer.id,
#         :amount => params[:charge][:amount],
#         :description => params[:charge][:description],
#         :currency => params[:charge][:currency],
#         }, {
#         :idempotency_key => ip_key
#         })
  
#         puts charge
  
#       rescue Stripe::CardError => e
#         render json: { message: 'oops'}, status: :not_acceptable
#       end
#     end
  
# end
# '''